name: Releases

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  PYTHON_VERSION: 3.9

jobs:
  labeler:
    name: Update labels
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Run Labeler
        uses: crazy-max/ghaction-github-labeler@v4.1.0

  continuous-integration:
    name: Continuous Integration
    uses: "./.github/workflows/continuous_integration.yml"
    secrets: inherit

  tests:
    name: Tests
    uses: "./.github/workflows/tests.yml"
    secrets: inherit

  release:
    name: Release
    runs-on: self-hosted
    needs: [continuous-integration, tests]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}

      - name: Setup Git
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          git config user.name "emma-simbot-bot"
          git config user.email "gdgp7yme8hn6zghsuoms@feedly.email"
          git config --global url."https://${PAT}@github.com/".insteadOf "https://github.com/"

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: Load npm cache
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install semantic release
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: |
          npm install --no-save @bjoluc/semantic-release-config-poetry
          npx semantic-release

  push_to_s3:
    name: Push release to S3
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Zip repository
        uses: montudor/action-zip@v1
        with:
          args: zip -r experience-hub.zip .

      - name: Push to S3
        uses: prewk/s3-cp-action@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          source: "experience-hub.zip"
          dest: "s3://emma-simbot/infrastructure/deployment/experience-hub.zip"
